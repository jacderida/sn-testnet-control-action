name: Upgrade Network
description: Use testnet-deploy to upgrade a network
inputs:
  ansible-forks:
    description: >
      The number of forks to use with Ansible. A network should be upgraded gradually, so this
      should be small. The default used by testnet-deploy is 2.
  ansible-verbose:
    description: Set to true to run Ansible with its most verbose output
  custom-inventory:
    description: >
      Run the upgrade against particular VMs in the environment.
      Should be a comma-separated list.
  faucet-version:
    description: >
      The faucet version to upgrade to. If not supplied, `testnet-deploy` will use the latest
      version.
  interval:
    description: The interval to apply between each node upgrade. Units are ms. The default is 200.
  network-name:
    description: The name of the network to upgrade
    required: true
  safenode-version:
    description: >
      The safenode version to upgrade to. If not supplied, `testnet-deploy` will use the latest
      version.
  sn-auditor-version:
    description: >
      The auditor version to upgrade to. If not supplied, `testnet-deploy` will use the latest
      version.

runs:
  using: composite
  steps:
    - name: upgrade network
      env:
        ANSIBLE_FORKS: ${{ inputs.ansible-forks }}
        ANSIBLE_VERBOSE: ${{ inputs.ansible-verbose }}
        AWS_DEFAULT_REGION: ${{ inputs.aws-region }}
        CUSTOM_INVENTORY: ${{ inputs.custom-inventory }}
        FAUCET_VERSION: ${{ inputs.faucet-version }}
        INTERVAL: ${{ inputs.interval }}
        NETWORK_NAME: ${{ inputs.network-name }}
        SAFENODE_VERSION: ${{ inputs.safenode-version }}
        # The auditor argument won't be used for now. It is not available on the `upgrade` command
        # yet, and the auditor upgrade could well be a separate command.
        SN_AUDITOR_VERSION: ${{ inputs.sn-auditor-version }}
      shell: bash
      run: |
        set -e

        cd sn-testnet-deploy
        command="testnet-deploy upgrade --name $NETWORK_NAME "
        [[ $ANSIBLE_VERBOSE == "true" ]] && command="$command --ansible-verbose "
        [[ -n $ANSIBLE_FORKS ]] && command="$command --forks $ANSIBLE_FORKS "
        [[ -n $FAUCET_VERSION ]] && command="$command --faucet-version $FAUCET_VERSION "
        [[ -n $INTERVAL ]] && command="$command --interval $INTERVAL "
        [[ -n $SAFENODE_VERSION ]] && command="$command --safenode-version $SAFENODE_VERSION "

        if [[ -n $CUSTOM_INVENTORY ]]; then
          IFS=',' read -ra VM_NAMES <<< "$CUSTOM_INVENTORY"
          for vm_name in "${VM_NAMES[@]}"; do
            command="$command --custom-inventory $vm_name"
          done
        fi

        echo "Will run testnet-deploy with: $command"
        eval $command
