name: Upgrade Network
description: Use testnet-deploy to upgrade a network
inputs:
  ansible-forks:
    description: >
      The number of forks to use with Ansible. A network should be upgraded gradually, so this
      should be small. The default used by testnet-deploy is 2.
  ansible-verbose:
    description: Set to true to run Ansible with its most verbose output
  custom-inventory:
    description: >
      Run the upgrade against particular VMs in the environment.
      Should be a comma-separated list. Cannot be used with the node-type input.
  delay:
    description: >
      A pre-upgrade delay to apply. Useful for when there is one node per machine.
      Value is in seconds.
  force:
    description: >
      This can be used for downgrading. It will apply the new binary even if the target version is lower.
  interval:
    description: The interval to apply between each node upgrade. Units are ms. The default is 200.
  network-name:
    description: The name of the network to upgrade
    required: true
  node-type:
    description: >
      Specify the type of node VM to upgrade. If not provided, all node VMs will be upgraded.
      Valid values are "bootstrap", "genesis", "generic" and "private".
      Cannot be used with the custom-inventory input.
  version:
    description: >
      The antnode version to upgrade to. If not supplied, `testnet-deploy` will use the latest
      version.

runs:
  using: composite
  steps:
    - name: upgrade network
      env:
        ANSIBLE_FORKS: ${{ inputs.ansible-forks }}
        ANSIBLE_VERBOSE: ${{ inputs.ansible-verbose }}
        AWS_DEFAULT_REGION: ${{ inputs.aws-region }}
        CUSTOM_INVENTORY: ${{ inputs.custom-inventory }}
        DELAY: ${{ inputs.delay }}
        FORCE: ${{ inputs.force }}
        INTERVAL: ${{ inputs.interval }}
        NETWORK_NAME: ${{ inputs.network-name }}
        NODE_TYPE: ${{ inputs.node-type }}
        VERSION: ${{ inputs.version }}
      shell: bash
      run: |
        set -e

        cd sn-testnet-deploy
        command="testnet-deploy upgrade --name $NETWORK_NAME "
        [[ $ANSIBLE_VERBOSE == "true" ]] && command="$command --ansible-verbose "
        [[ -n $ANSIBLE_FORKS ]] && command="$command --forks $ANSIBLE_FORKS "
        [[ -n $DELAY ]] && command="$command --pre-upgrade-delay $DELAY "
        [[ $FORCE == "true" ]] && command="$command --force "
        [[ -n $INTERVAL ]] && command="$command --interval $INTERVAL "
        [[ -n $NODE_TYPE ]] && command="$command --node-type $NODE_TYPE "
        [[ -n $VERSION ]] && command="$command --version $VERSION "

        if [[ -n $CUSTOM_INVENTORY ]]; then
          IFS=',' read -ra VM_NAMES <<< "$CUSTOM_INVENTORY"
          for vm_name in "${VM_NAMES[@]}"; do
            command="$command --custom-inventory $vm_name"
          done
        fi

        echo "Will run testnet-deploy with: $command"
        eval $command