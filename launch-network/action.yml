name: Launch Network
description: Launches a remote Autonomi network with a given specification
inputs:
  ansible-forks:
    description: The number of forks to use with Ansible
  ansible-verbose:
    description: Set to use verbose output for Ansible
    default: false
  ant-version:
    description: Supply a version for ant. Otherwise the latest will be used.
  antctl-version:
    description: Supply a version for antctl. Otherwise the latest will be used.
  antnode-version:
    description: Supply a version for antnode. Otherwise the latest will be used.
  antnode-features:
    description: Comma-separated list of features to be used when building a branch of antnode
  autonomi-branch:
    description: >
      Build binaries from the specified autonomi branch. The testnet will use these binaries.
  autonomi-repo-owner:
    description: >
      Build binaries from the autonomi repository owned by this org or username. The testnet
      will use these binaries.
  chunk-size:
    description: >
      Specify the chunk size in bytes as a 64-bit integer.
      Only applies when building a custom branch.
  downloaders-count:
    description: Number of downloader services to run
    default: '0'
  environment-type:
    description: >
      Possible values are 'development', 'staging' and 'production'. This value determines the sizes
      and counts of VMs. The counts can be overridden with the other count inputs.
    required: true
  environment-vars:
    description: Pass a comma-separated list of environment variables to safenode services
  evm-data-payments-address:
    description: The address of the EVM data payments contract
  evm-network-type:
    description: >
      The type of EVM network to use. Possible values are 'arbitrum-one', 'arbitrum-sepolia', or 'custom'.
    default: 'arbitrum-one'
  evm-node-vm-size:
    description: The size of the EVM node VMs
  evm-payment-token-address:
    description: The address of the EVM payment token contract
  evm-rpc-url:
    description: The RPC URL for the EVM network when using a custom network type
  initial-gas:
    description: Override the default initial gas amount for uploaders
  initial-tokens:
    description: Override the default initial token amount for uploaders
  interval:
    description: The interval to apply between each node startup. Units are ms. The default is 200.
  log-format:
    description: Set the log format for the nodes, can be 'json' or 'default'. Defaults to 'default' if not set.
  max-archived-log-files:
    description: Maximum number of archived log files to keep for each service
  max-log-files:
    description: Maximum number of log files to keep for each service
  nat-gateway-vm-size:
    description: The size of the NAT gateway VM
  network-contacts-file-name:
    description: Provide a name for the network contacts file
  network-id:
    description: The network ID (must be between 2 and 255)
    type: number
    minimum: 2
    maximum: 255
  network-name:
    description: The name of the testnet.
    required: true
  node-count:
    description: Number of node services to run on each node VM
  node-vm-count:
    description: Number of node VMs to be deployed
  node-vm-size:
    description: The size of the regular node VMs
  node-volume-size:
    description: The size of the volumes for regular node VMs in GB
  peer-cache-node-count:
    description: Number of node services to run on each peer cache node VM
  peer-cache-node-vm-count:
    description: Number of peer cache node VMs to be deployed
  peer-cache-node-vm-size:
    description: The size of the peer cache node VMs
  peer-cache-node-volume-size:
    description: The size of the volumes for peer cache node VMs in GB
  private-node-count:
    description: Number of node services to run on each private node VM
  private-node-vm-count:
    description: Number of private node VMs to be deployed
  private-node-volume-size:
    description: The size of the volumes for private node VMs in GB
  protocol-version:
    description: The network protocol version can be set to 'restricted' or any custom version string.
  provider:
    description: The cloud provider. Accepts 'aws' or 'digital-ocean'.
    required: true
  public-rpc:
    description: Set to make node manager RPC daemons publicly accessible
    required: true
    default: false
  rewards-address:
    description: The rewards address for each safenode service.
    required: true
  uploader-vm-count:
    description: Number of uploader VMs to be deployed
  uploader-vm-size:
    description: The size of the uploader VMs
  uploaders-count:
    description: Number of uploaders to run per VM
  wallet-secret-key:
      description: >
        A wallet secret key for the uploaders.
        It only applies when Arbitrum One or Sepolia networks are used.

runs:
  using: composite
  steps:
    - name: Create network
      env:
        ANSIBLE_FORKS: ${{ inputs.ansible-forks }}
        ANSIBLE_VERBOSE: ${{ inputs.ansible-verbose }}
        ANT_VERSION: ${{ inputs.ant-version }}
        ANTCTL_VERSION: ${{ inputs.antctl-version }}
        ANTNODE_FEATURES: ${{ inputs.antnode-features }}
        ANTNODE_VERSION: ${{ inputs.antnode-version }}
        AUTONOMI_BRANCH: ${{ inputs.autonomi-branch }}
        AUTONOMI_REPO_OWNER: ${{ inputs.autonomi-repo-owner }}
        CHUNK_SIZE: ${{ inputs.chunk-size }}
        DOWNLOADERS_COUNT: ${{ inputs.downloaders-count }}
        ENVIRONMENT_TYPE: ${{ inputs.environment-type }}
        ENVIRONMENT_VARS: ${{ inputs.environment-vars }}
        EVM_DATA_PAYMENTS_ADDRESS: ${{ inputs.evm-data-payments-address }}
        EVM_NETWORK_TYPE: ${{ inputs.evm-network-type }}
        EVM_NODE_VM_SIZE: ${{ inputs.evm-node-vm-size }}
        EVM_PAYMENT_TOKEN_ADDRESS: ${{ inputs.evm-payment-token-address }}
        EVM_RPC_URL: ${{ inputs.evm-rpc-url }}
        INITIAL_GAS: ${{ inputs.initial-gas }}
        INITIAL_TOKENS: ${{ inputs.initial-tokens }}
        INTERVAL: ${{ inputs.interval }}
        LOG_FORMAT: ${{ inputs.log-format }}
        MAX_ARCHIVED_LOG_FILES: ${{ inputs.max-archived-log-files }}
        MAX_LOG_FILES: ${{ inputs.max-log-files }}
        NAT_GATEWAY_VM_SIZE: ${{ inputs.nat-gateway-vm-size }}
        NETWORK_CONTACTS_FILE_NAME: ${{ inputs.network-contacts-file-name }}
        NETWORK_ID: ${{ inputs.network-id }}
        NETWORK_NAME: ${{ inputs.network-name }}
        NODE_COUNT: ${{ inputs.node-count }}
        NODE_VM_COUNT: ${{ inputs.node-vm-count }}
        NODE_VM_SIZE: ${{ inputs.node-vm-size }}
        NODE_VOLUME_SIZE: ${{ inputs.node-volume-size }}
        PEER_CACHE_NODE_COUNT: ${{ inputs.peer-cache-node-count }}
        PEER_CACHE_NODE_VM_COUNT: ${{ inputs.peer-cache-node-vm-count }}
        PEER_CACHE_NODE_VM_SIZE: ${{ inputs.peer-cache-node-vm-size }}
        PEER_CACHE_NODE_VOLUME_SIZE: ${{ inputs.peer-cache-node-volume-size }}
        PRIVATE_NODE_COUNT: ${{ inputs.private-node-count }}
        PRIVATE_NODE_VM_COUNT: ${{ inputs.private-node-vm-count }}
        PRIVATE_NODE_VOLUME_SIZE: ${{ inputs.private-node-volume-size }}
        PROTOCOL_VERSION: ${{ inputs.protocol-version }}
        PROVIDER: ${{ inputs.provider }}
        PUBLIC_RPC: ${{ inputs.public-rpc }}
        RUST_LOG: ${{ inputs.rust-log }}
        REWARDS_ADDRESS: ${{ inputs.rewards-address }}
        UPLOADER_VM_COUNT: ${{ inputs.uploader-vm-count }}
        UPLOADER_VM_SIZE: ${{ inputs.uploader-vm-size }}
        UPLOADERS_COUNT: ${{ inputs.uploaders-count }}
        WALLET_SECRET_KEY: ${{ inputs.wallet-secret-key }}
      shell: bash
      run: |
        set -e

        cd sn-testnet-deploy
        command="testnet-deploy deploy \
          --environment-type $ENVIRONMENT_TYPE \
          --name $NETWORK_NAME \
          --provider $PROVIDER "
        [[ $ANSIBLE_VERBOSE == "true" ]] && command="$command --ansible-verbose "
        [[ -n $ANT_VERSION ]] && command="$command --ant-version $ANT_VERSION "
        [[ -n $ANTCTL_VERSION ]] && command="$command --antctl-version $ANTCTL_VERSION "
        [[ -n $ANTNODE_FEATURES ]] && command="$command --antnode-features $ANTNODE_FEATURES "
        [[ -n $ANTNODE_VERSION ]] && command="$command --antnode-version $ANTNODE_VERSION "
        [[ -n $AUTONOMI_BRANCH ]] && command="$command --branch $AUTONOMI_BRANCH "
        [[ -n $AUTONOMI_REPO_OWNER ]] && command="$command --repo-owner $AUTONOMI_REPO_OWNER "
        [[ -n $CHUNK_SIZE ]] && command="$command --chunk-size $CHUNK_SIZE "
        [[ $DOWNLOADERS_COUNT -gt 0 ]] && command="$command --downloaders-count $DOWNLOADERS_COUNT "
        [[ -n $ENVIRONMENT_VARS ]] && command="$command --env $ENVIRONMENT_VARS "
        [[ -n $EVM_DATA_PAYMENTS_ADDRESS ]] && command="$command --evm-data-payments-address $EVM_DATA_PAYMENTS_ADDRESS "
        [[ -n $EVM_NETWORK_TYPE ]] && command="$command --evm-network-type $EVM_NETWORK_TYPE "
        [[ -n $EVM_NODE_VM_SIZE ]] && command="$command --evm-node-vm-size $EVM_NODE_VM_SIZE "
        [[ -n $EVM_PAYMENT_TOKEN_ADDRESS ]] && command="$command --evm-payment-token-address $EVM_PAYMENT_TOKEN_ADDRESS "
        [[ -n $EVM_RPC_URL ]] && command="$command --evm-rpc-url \"$EVM_RPC_URL\" "
        [[ -n $INITIAL_GAS ]] && command="$command --initial-gas $INITIAL_GAS "
        [[ -n $INITIAL_TOKENS ]] && command="$command --initial-tokens $INITIAL_TOKENS "
        [[ -n $INTERVAL ]] && command="$command --interval $INTERVAL "
        [[ -n $LOG_FORMAT ]] && command="$command --log-format $LOG_FORMAT "
        [[ -n $MAX_ARCHIVED_LOG_FILES ]] && command="$command --max-archived-log-files $MAX_ARCHIVED_LOG_FILES "
        [[ -n $MAX_LOG_FILES ]] && command="$command --max-log-files $MAX_LOG_FILES "
        [[ -n $NAT_GATEWAY_VM_SIZE ]] && command="$command --nat-gateway-vm-size $NAT_GATEWAY_VM_SIZE "
        [[ -n $NETWORK_CONTACTS_FILE_NAME ]] && command="$command --network-contacts-file-name $NETWORK_CONTACTS_FILE_NAME "
        [[ -n $NETWORK_ID ]] && command="$command --network-id $NETWORK_ID "
        [[ -n $NODE_COUNT ]] && command="$command --node-count $NODE_COUNT "
        [[ -n $NODE_VM_COUNT ]] && command="$command --node-vm-count $NODE_VM_COUNT "
        [[ -n $NODE_VM_SIZE ]] && command="$command --node-vm-size $NODE_VM_SIZE "
        [[ -n $NODE_VOLUME_SIZE ]] && command="$command --node-volume-size $NODE_VOLUME_SIZE "
        [[ -n $PEER_CACHE_NODE_COUNT ]] && command="$command --peer-cache-node-count $PEER_CACHE_NODE_COUNT "
        [[ -n $PEER_CACHE_NODE_VM_COUNT ]] && command="$command --peer-cache-node-vm-count $PEER_CACHE_NODE_VM_COUNT "
        [[ -n $PEER_CACHE_NODE_VM_SIZE ]] && command="$command --peer-cache-node-vm-size $PEER_CACHE_NODE_VM_SIZE "
        [[ -n $PEER_CACHE_NODE_VOLUME_SIZE ]] && command="$command --peer-cache-node-volume-size $PEER_CACHE_NODE_VOLUME_SIZE "
        [[ -n $PRIVATE_NODE_COUNT ]] && command="$command --private-node-count $PRIVATE_NODE_COUNT "
        [[ -n $PRIVATE_NODE_VM_COUNT ]] && command="$command --private-node-vm-count $PRIVATE_NODE_VM_COUNT "
        [[ -n $PRIVATE_NODE_VOLUME_SIZE ]] && command="$command --private-node-volume-size $PRIVATE_NODE_VOLUME_SIZE "
        [[ -n $PROTOCOL_VERSION ]] && command="$command --protocol-version $PROTOCOL_VERSION "
        [[ $PUBLIC_RPC == "true" ]] && command="$command --public-rpc "
        [[ -n $REWARDS_ADDRESS ]] && command="$command --rewards-address $REWARDS_ADDRESS "
        [[ -n $UPLOADER_VM_COUNT ]] && command="$command --uploader-vm-count $UPLOADER_VM_COUNT "
        [[ -n $UPLOADER_VM_SIZE ]] && command="$command --uploader-vm-size $UPLOADER_VM_SIZE "
        [[ -n $UPLOADERS_COUNT ]] && command="$command --uploaders-count $UPLOADERS_COUNT "
        [[ -n $WALLET_SECRET_KEY ]] && command="$command --funding-wallet-secret-key $WALLET_SECRET_KEY "

        echo "Will run testnet-deploy with: $command"
        eval $command

    - name: Set ANT_PEERS and ANT_INVENTORY
      shell: bash
      run: |
        inventory_path=/home/runner/.local/share/safe/testnet-deploy/"${{ inputs.network-name }}"-inventory.json
        echo "Inventory Path: $inventory_path"
        genesis_multiaddr=$(jq -r '.genesis_multiaddr' $inventory_path)
        echo "ANT_PEERS=$genesis_multiaddr" >> $GITHUB_ENV
        echo "ANT_INVENTORY=$inventory_path" >> $GITHUB_ENV
