name: Client Deploy Static Downloaders
description: Deploys a new client environment consisting of static downloaders
inputs:
  ansible-forks:
    description: Override the maximum number of forks Ansible will use to execute tasks on target hosts
  ansible-verbose:
    description: Set to use verbose output for Ansible
    default: false
  ant-version:
    description: Supply a version for ant. Otherwise the latest will be used.
  branch:
    description: >
      Build binaries from the specified autonomi branch. The testnet will use these binaries.
  chunk-size:
    description: >
      Specify the chunk size in bytes as a 64-bit integer.
      Only applies when building a custom branch.
  client-env:
    description: Pass a comma-separated list of environment variables to the ant binary
  client-vm-count:
    description: Number of client VMs to be deployed
  client-vm-size:
    description: The size of the Client VMs
  disable-telegraf:
    description: Disable Telegraf metrics collection if set to true
    default: false
  environment-type:
    description: >
      Possible values are 'development', 'staging' and 'production'. This value determines the sizes
      and counts of VMs. The counts can be overridden with the other count inputs.
    required: true
    default: development
  evm-data-payments-address:
    description: The address of the EVM data payments contract
  evm-network-type:
    description: >
      The type of EVM network to use. Possible values are 'arbitrum-one' or 'custom'.
    default: 'arbitrum-one'
  evm-payment-token-address:
    description: The address of the EVM payment token contract
  evm-rpc-url:
    description: The RPC URL for the EVM network when using a custom network type
  name:
    description: The name of the environment
    required: true
  network-id:
    description: >
      Specify the network ID to use for the node services. This is used to partition the network
      and will not allow nodes with different network IDs to join.
    required: true
  network-contacts-url:
    description: The networks contacts URL from an existing network
  peer:
    description: A peer from an existing network that the Ant client can connect to (in multiaddr format)
  provider:
    description: The cloud provider. Accepts 'aws' or 'digital-ocean'.
    required: true
    default: digital-ocean
  region:
    description: The cloud region to deploy resources in. Defaults to "lon1" for Digital Ocean.
    default: lon1
  repo-owner:
    description: >
      Build binaries from the autonomi repository owned by this org or username. The testnet
      will use these binaries.
  skip-binary-build:
    description: >
      Skip building the autonomi binaries if they were built during a previous run of the deployer
      using the same branch, repo-owner and name arguments.
    default: false

runs:
  using: composite
  steps:
    - name: Deploy static downloaders
      env:
        ANSIBLE_FORKS: ${{ inputs.ansible-forks }}
        ANSIBLE_VERBOSE: ${{ inputs.ansible-verbose }}
        ANT_VERSION: ${{ inputs.ant-version }}
        BRANCH: ${{ inputs.branch }}
        CHUNK_SIZE: ${{ inputs.chunk-size }}
        CLIENT_ENV: ${{ inputs.client-env }}
        CLIENT_VM_COUNT: ${{ inputs.client-vm-count }}
        CLIENT_VM_SIZE: ${{ inputs.client-vm-size }}
        DISABLE_TELEGRAF: ${{ inputs.disable-telegraf }}
        ENVIRONMENT_TYPE: ${{ inputs.environment-type }}
        EVM_DATA_PAYMENTS_ADDRESS: ${{ inputs.evm-data-payments-address }}
        EVM_NETWORK_TYPE: ${{ inputs.evm-network-type }}
        EVM_PAYMENT_TOKEN_ADDRESS: ${{ inputs.evm-payment-token-address }}
        EVM_RPC_URL: ${{ inputs.evm-rpc-url }}
        NAME: ${{ inputs.name }}
        NETWORK_ID: ${{ inputs.network-id }}
        NETWORK_CONTACTS_URL: ${{ inputs.network-contacts-url }}
        PEER: ${{ inputs.peer }}
        PROVIDER: ${{ inputs.provider }}
        REGION: ${{ inputs.region }}
        REPO_OWNER: ${{ inputs.repo-owner }}
        SKIP_BINARY_BUILD: ${{ inputs.skip-binary-build }}
      shell: bash
      run: |
        set -e

        cd sn-testnet-deploy
        command="testnet-deploy clients deploy-static-downloaders \
          --name $NAME \
          --network-id $NETWORK_ID \
          --environment-type $ENVIRONMENT_TYPE \
          --provider $PROVIDER "
        [[ $ANSIBLE_VERBOSE == "true" ]] && command="$command --ansible-verbose "
        [[ -n $ANSIBLE_FORKS ]] && command="$command --forks $ANSIBLE_FORKS "
        [[ -n $ANT_VERSION ]] && command="$command --ant-version $ANT_VERSION "
        [[ -n $BRANCH ]] && command="$command --branch $BRANCH "
        [[ -n $CHUNK_SIZE ]] && command="$command --chunk-size $CHUNK_SIZE "
        [[ -n $CLIENT_ENV ]] && command="$command --client-env $CLIENT_ENV "
        [[ -n $CLIENT_VM_COUNT ]] && command="$command --client-vm-count $CLIENT_VM_COUNT "
        [[ -n $CLIENT_VM_SIZE ]] && command="$command --client-vm-size $CLIENT_VM_SIZE "
        [[ $DISABLE_TELEGRAF == "true" ]] && command="$command --disable-telegraf "
        [[ -n $EVM_DATA_PAYMENTS_ADDRESS ]] && command="$command --evm-data-payments-address $EVM_DATA_PAYMENTS_ADDRESS "
        [[ -n $EVM_NETWORK_TYPE ]] && command="$command --evm-network-type $EVM_NETWORK_TYPE "
        [[ -n $EVM_PAYMENT_TOKEN_ADDRESS ]] && command="$command --evm-payment-token-address $EVM_PAYMENT_TOKEN_ADDRESS "
        [[ -n $EVM_RPC_URL ]] && command="$command --evm-rpc-url \"$EVM_RPC_URL\" "
        [[ -n $NETWORK_CONTACTS_URL ]] && command="$command --network-contacts-url $NETWORK_CONTACTS_URL "
        [[ -n $PEER ]] && command="$command --peer $PEER "
        [[ -n $REGION ]] && command="$command --region $REGION "
        [[ -n $REPO_OWNER ]] && command="$command --repo-owner $REPO_OWNER "
        [[ $SKIP_BINARY_BUILD == "true" ]] && command="$command --skip-binary-build "

        echo "Will run testnet-deploy with: $command"
        eval $command
